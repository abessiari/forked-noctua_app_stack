version: '3.7'
services:

  minerva:
    hostname: minerva 
    container_name: minerva 
    environment:
      JAVA_OPTS: "{{ minerva_java_opts }}"
      GOLR_SEED: "{{ golr_lookup_url }}"
      GOLR_LABELS: "{{ golr_labels_url }}"
    volumes:
      - {{ stage_dir }}:/var/minerva
    image: '{{ docker_hub_user }}/minerva:{{ tag }}'
    init: true
    restart: unless-stopped

  barista:
    hostname: barista 
    container_name: barista  
    volumes:
      - {{ stage_dir }}:/stage_dir
      - {{ stage_dir }}/conf/startup.yaml:/app/startup.yaml
    image: '{{ docker_hub_user }}/noctua:{{ tag }}'
    command: ./node_modules/.bin/gulp run-barista
    init: true
    environment:
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    restart: unless-stopped
    healthcheck:
       test: wget --no-verbose --timeout=5 --tries=5 --spider http://barista:3400 || kill 1
       interval: 60s
       retries: 1
       start_period: 30s
    depends_on:
      - minerva 

  noctua:
    hostname: noctua 
    container_name: noctua  
    volumes:
      - {{ stage_dir }}:/stage_dir
      - {{ stage_dir }}/conf/startup.yaml:/app/startup.yaml
    image: '{{ docker_hub_user }}/noctua:{{ tag }}'
    command: ./node_modules/.bin/gulp run-noctua
    init: true
    environment:
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    restart: unless-stopped
    healthcheck:
       test: wget --no-verbose --timeout=5 --tries=5 --spider http://noctua:8910 || kill 1
       interval: 60s
       retries: 1
       start_period: 30s
    depends_on:
      - minerva 
      - barista 

  apache_proxy:
    hostname: apache_noctua
    container_name: apache_noctua
    image: {{ apache_proxy_image }}
    volumes:
      - {{ stage_dir }}/httpd-confs:/etc/apache2/sites-enabled
      - {{ stage_dir }}/qos.conf:/etc/apache2/mods-enabled/qos.conf
      - {{ stage_dir }}/robots.txt:/var/www/html/robots.txt
      - {{ stage_dir }}/apache_logs:/var/log/apache2
      - {{ stage_dir }}/credentials:/opt/credentials
      - {{ stage_dir }}/credentials/s3cfg:/root/.aws/config
    ports:
      - "80:80"
      - "443:443"
    environment:
      - S3_PATH={{ S3_PATH }}/noctua
      - S3_BUCKET={{ S3_BUCKET }}
      - USE_SSL={{ USE_SSL }}
      - S3_SSL_CERTS_LOCATION={{ S3_SSL_CERTS_LOCATION }}
    init: true
    restart: unless-stopped
    depends_on:
      - noctua 
      - barista 

